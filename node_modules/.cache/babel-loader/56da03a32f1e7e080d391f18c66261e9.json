{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abrikos/WebstormProjects/math/src/components/file-list/FileModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"components/file-list/file-list.sass\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nFileList.propTypes = {\n  files: PropTypes.array.isRequired,\n  editable: PropTypes.bool,\n  controls: PropTypes.array,\n  onDelete: PropTypes.func\n};\nexport default function FileModal(props) {\n  _s();\n\n  const image = props.image;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    props.onToggle(false);\n    setModal(!modal);\n  };\n\n  function submitImageAttr(e) {\n    e.preventDefault();\n    const form = props.store.formToObject(e.target);\n    props.store.api(`/file/${image.id}/update`, form).then(props.onChange);\n  }\n\n  if (!image) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: true,\n    toggle: toggle,\n    backdrop: true,\n    keyboard: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      toggle: toggle,\n      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.path,\n        alt: 'Full',\n        className: \"img-fluid w-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitImageAttr,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u044C \\u043F\\u043E\\u0434 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u043E\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          defaultValue: image.description,\n          className: \"w-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: toggle,\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n}\n\n_s(FileModal, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n\n_c = FileModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileModal\");","map":{"version":3,"sources":["/home/abrikos/WebstormProjects/math/src/components/file-list/FileModal.js"],"names":["React","useState","Button","Modal","PropTypes","FileList","propTypes","files","array","isRequired","editable","bool","controls","onDelete","func","FileModal","props","image","modal","setModal","toggle","onToggle","submitImageAttr","e","preventDefault","form","store","formToObject","target","api","id","then","onChange","path","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,qCAAP;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGAC,QAAQ,CAACC,SAAT,GAAqB;AACjBC,EAAAA,KAAK,EAAEH,SAAS,CAACI,KAAV,CAAgBC,UADN;AAEjBC,EAAAA,QAAQ,EAAEN,SAAS,CAACO,IAFH;AAGjBC,EAAAA,QAAQ,EAAER,SAAS,CAACI,KAHH;AAIjBK,EAAAA,QAAQ,EAAET,SAAS,CAACU;AAJH,CAArB;AAQA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACrC,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMmB,MAAM,GAAG,MAAM;AACjBJ,IAAAA,KAAK,CAACK,QAAN,CAAe,KAAf;AACAF,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH,GAHD;;AAKA,WAASI,eAAT,CAAyBC,CAAzB,EAA4B;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAGT,KAAK,CAACU,KAAN,CAAYC,YAAZ,CAAyBJ,CAAC,CAACK,MAA3B,CAAb;AACAZ,IAAAA,KAAK,CAACU,KAAN,CAAYG,GAAZ,CAAiB,SAAQZ,KAAK,CAACa,EAAG,SAAlC,EAA4CL,IAA5C,EACKM,IADL,CACUf,KAAK,CAACgB,QADhB;AAEH;;AAED,MAAI,CAACf,KAAL,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,sBAAO,QAAC,KAAD;AAAO,IAAA,MAAM,EAAE,IAAf;AAAqB,IAAA,MAAM,EAAEG,MAA7B;AAAqC,IAAA,QAAQ,EAAE,IAA/C;AAAqD,IAAA,QAAQ,EAAE,IAA/D;AAAA,4BACH,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,MAAM,EAAEA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,KAAD,CAAO,IAAP;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEH,KAAK,CAACgB,IAAhB;AAAsB,QAAA,GAAG,EAAE,MAA3B;AAAmC,QAAA,SAAS,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAEX,eAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,IAAI,EAAC,aAAf;AAA6B,UAAA,YAAY,EAAEL,KAAK,CAACiB,WAAjD;AAA8D,UAAA,SAAS,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAUH,QAAC,KAAD,CAAO,MAAP;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEd,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH;;GA/BuBL,S;;KAAAA,S","sourcesContent":["import React, {useState} from \"react\";\nimport \"components/file-list/file-list.sass\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\n\nFileList.propTypes = {\n    files: PropTypes.array.isRequired,\n    editable: PropTypes.bool,\n    controls: PropTypes.array,\n    onDelete: PropTypes.func,\n};\n\n\nexport default function FileModal(props) {\n    const image = props.image;\n    const [modal, setModal] = useState(false);\n    const toggle = () => {\n        props.onToggle(false)\n        setModal(!modal);\n    }\n\n    function submitImageAttr(e) {\n        e.preventDefault()\n        const form = props.store.formToObject(e.target);\n        props.store.api(`/file/${image.id}/update`, form)\n            .then(props.onChange)\n    }\n\n    if (!image) return <div/>\n    return <Modal isOpen={true} toggle={toggle} backdrop={true} keyboard={true}>\n        <Modal.Header toggle={toggle}>Редактирование</Modal.Header>\n        <Modal.Body>\n            <img src={image.path} alt={'Full'} className=\"img-fluid w-100\"/>\n            <form onSubmit={submitImageAttr}>\n                <label>Подпись под картинкой</label>\n                <textarea name=\"description\" defaultValue={image.description} className=\"w-100\"/>\n                <Button>Сохранить</Button>\n            </form>\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"secondary\" onClick={toggle}>Закрыть</Button>\n        </Modal.Footer>\n    </Modal>\n\n}\n"]},"metadata":{},"sourceType":"module"}