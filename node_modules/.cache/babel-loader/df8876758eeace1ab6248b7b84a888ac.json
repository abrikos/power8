{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abrikos/WebstormProjects/math/src/components/file-list/FileItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"components/file-list/file-list.sass\";\nimport { Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport FileModal from \"components/file-list/FileModal\";\nFileList.propTypes = {\n  files: PropTypes.array.isRequired,\n  editable: PropTypes.bool,\n  controls: PropTypes.array,\n  onDelete: PropTypes.func\n};\nexport default function FileItem(props) {\n  _s();\n\n  const [image, setImage] = useState(props.image);\n  const [modalImage, setModalImage] = useState();\n\n  function deleteImage() {\n    if (!window.confirm('Удалить изображение?')) return;\n    props.store.api('/file/delete/' + image.id).then(() => {\n      setImage(null);\n    });\n  }\n\n  if (!image) return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"success\",\n        onClick: () => props.setPreview(image),\n        title: \"\\u0421\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u043E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u0439 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u043E\\u0439\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"primary\",\n        onClick: () => setModalImage(image),\n        title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u0432\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => deleteImage(image),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [image.error ? /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: image.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: image.file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 56\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"error\",\n          children: [(image.file.size / 1024 / 1024).toFixed(1), \" Mb\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 62\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.path,\n        alt: image.path,\n        className: \"img-fluid\",\n        title: image.description,\n        onClick: () => setModalImage(image)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: image.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FileModal, {\n        image: modalImage,\n        onToggle: setModalImage,\n        onChange: setImage,\n        store: props.store\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n}\n\n_s(FileItem, \"eno+/soebZLN1Rc1AFOci/94ofM=\");\n\n_c = FileItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileItem\");","map":{"version":3,"sources":["/home/abrikos/WebstormProjects/math/src/components/file-list/FileItem.js"],"names":["React","useState","Button","PropTypes","FontAwesomeIcon","faCheck","faEdit","faTrash","FileModal","FileList","propTypes","files","array","isRequired","editable","bool","controls","onDelete","func","FileItem","props","image","setImage","modalImage","setModalImage","deleteImage","window","confirm","store","api","id","then","setPreview","error","file","name","size","toFixed","path","description"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport \"components/file-list/file-list.sass\";\nimport {Button} from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck, faEdit, faTrash} from \"@fortawesome/free-solid-svg-icons\";\nimport FileModal from \"components/file-list/FileModal\";\n\nFileList.propTypes = {\n    files: PropTypes.array.isRequired,\n    editable: PropTypes.bool,\n    controls: PropTypes.array,\n    onDelete: PropTypes.func,\n};\n\nexport default function FileItem(props) {\n    const [image, setImage] = useState(props.image);\n    const [modalImage, setModalImage] = useState();\n\n    function deleteImage() {\n        if (!window.confirm('Удалить изображение?')) return;\n        props.store.api('/file/delete/' + image.id)\n            .then(() => {\n                setImage(null)\n            })\n    }\n\n    if (!image) return <span/>\n\n    return <div className=\"image-cell\">\n\n        <div>\n            <Button size=\"sm\" variant=\"success\" onClick={() => props.setPreview(image)} title=\"Сделать основной картинкой\">\n                <FontAwesomeIcon icon={faCheck}/>\n            </Button>\n            <Button size=\"sm\" variant=\"primary\" onClick={() => setModalImage(image)} title=\"Редактировать свойства\">\n                <FontAwesomeIcon icon={faEdit}/>\n            </Button>\n            <Button size=\"sm\" variant=\"danger\" onClick={() => deleteImage(image)}>\n                <FontAwesomeIcon icon={faTrash}/>\n            </Button>\n        </div>\n\n        <div>\n\n            {image.error ?\n                <small>\n                    <div className=\"error\">{image.error}</div>\n                    <strong>{image.file.name}</strong> <br/> <small\n                    className=\"error\">{(image.file.size / 1024 / 1024).toFixed(1)} Mb</small> </small>\n                :\n                <img src={image.path} alt={image.path} className=\"img-fluid\" title={image.description} onClick={() => setModalImage(image)}/>}\n            <br/>\n            <small>{image.description}</small>\n\n            <FileModal image={modalImage} onToggle={setModalImage} onChange={setImage} store={props.store}/>\n        </div>\n\n\n    </div>\n\n}\n"]},"metadata":{},"sourceType":"module"}