{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abrikos/WebstormProjects/math/src/components/copy-button/CopyButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport { Overlay, Popover, PopoverHeader } from \"react-bootstrap\";\nimport md5 from 'md5';\nexport default function CopyButton(props) {\n  _s();\n\n  const [showPopOver, setShowPopOver] = useState(false);\n  const target = useRef(null);\n\n  const copyToClipboard = text => {\n    setShowPopOver(true);\n    const textField = document.createElement('textarea');\n    textField.innerText = text;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n    setTimeout(() => {\n      setShowPopOver(false);\n    }, 2000);\n  };\n\n  const id = 'cpbtn' + md5(props.text);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        cursor: 'pointer',\n        color: '#555'\n      },\n      ref: target,\n      id: id,\n      onClick: () => copyToClipboard(props.text),\n      title: `Press to copy: ${props.text}`,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        size: \"sm\",\n        icon: faCopy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), \" \\u041A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      target: target.current,\n      show: showPopOver,\n      placement: \"right\",\n      children: ({\n        placement,\n        arrowProps,\n        show: _show,\n        popper,\n        ...props\n      }) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n        style: {\n          backgroundColor: 'white',\n          opacity: .5,\n          padding: '2px 10px',\n          //color: 'white',\n          borderRadius: 3,\n          ...props.style\n        },\n        children: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CopyButton, \"WRGP3/usVeNvRbbwS7hKVTxWkOA=\");\n\n_c = CopyButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CopyButton\");","map":{"version":3,"sources":["/home/abrikos/WebstormProjects/math/src/components/copy-button/CopyButton.js"],"names":["React","useRef","useState","FontAwesomeIcon","faCopy","Overlay","Popover","PopoverHeader","md5","CopyButton","props","showPopOver","setShowPopOver","target","copyToClipboard","text","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","setTimeout","id","cursor","color","current","placement","arrowProps","show","_show","popper","backgroundColor","opacity","padding","borderRadius","style"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,MAAR,QAAqB,mCAArB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,aAA1B,QAA8C,iBAA9C;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMW,MAAM,GAAGZ,MAAM,CAAC,IAAD,CAArB;;AAEA,QAAMa,eAAe,GAAIC,IAAD,IAAU;AAC9BH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,UAAMI,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAlB;AACAF,IAAAA,SAAS,CAACG,SAAV,GAAsBJ,IAAtB;AACAE,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;AACAA,IAAAA,SAAS,CAACM,MAAV;AACAL,IAAAA,QAAQ,CAACM,WAAT,CAAqB,MAArB;AACAP,IAAAA,SAAS,CAACQ,MAAV;AACAC,IAAAA,UAAU,CAAC,MAAM;AACbb,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAXD;;AAaA,QAAMc,EAAE,GAAG,UAAUlB,GAAG,CAACE,KAAK,CAACK,IAAP,CAAxB;AACA,sBAAO;AAAA,4BAAE;AAAM,MAAA,KAAK,EAAE;AAACY,QAAAA,MAAM,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAAb;AAAiD,MAAA,GAAG,EAAEf,MAAtD;AAA8D,MAAA,EAAE,EAAEa,EAAlE;AAAsE,MAAA,OAAO,EAAE,MAAMZ,eAAe,CAACJ,KAAK,CAACK,IAAP,CAApG;AACI,MAAA,KAAK,EAAG,kBAAiBL,KAAK,CAACK,IAAK,EADxC;AAAA,8BAED,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,IAAtB;AAA2B,QAAA,IAAI,EAAEX;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,eAKH,QAAC,OAAD;AAAS,MAAA,MAAM,EAAES,MAAM,CAACgB,OAAxB;AACS,MAAA,IAAI,EAAElB,WADf;AAES,MAAA,SAAS,EAAE,OAFpB;AAAA,gBAGK,CAAC;AAAEmB,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AAAyBC,QAAAA,IAAI,EAAEC,KAA/B;AAAsCC,QAAAA,MAAtC;AAA8C,WAAGxB;AAAjD,OAAD,kBACG,oBACQA,KADR;AAEI,QAAA,KAAK,EAAE;AACHyB,UAAAA,eAAe,EAAE,OADd;AAEHC,UAAAA,OAAO,EAAC,EAFL;AAGHC,UAAAA,OAAO,EAAE,UAHN;AAIH;AACAC,UAAAA,YAAY,EAAE,CALX;AAMH,aAAG5B,KAAK,CAAC6B;AANN,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,YALG;AAAA,kBAAP;AAyBH;;GA3CuB9B,U;;KAAAA,U","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCopy} from \"@fortawesome/free-solid-svg-icons\";\nimport {Overlay, Popover, PopoverHeader} from \"react-bootstrap\";\nimport md5 from 'md5';\n\nexport default function CopyButton(props) {\n    const [showPopOver, setShowPopOver] = useState(false);\n    const target = useRef(null);\n\n    const copyToClipboard = (text) => {\n        setShowPopOver(true);\n        const textField = document.createElement('textarea')\n        textField.innerText = text\n        document.body.appendChild(textField)\n        textField.select();\n        document.execCommand('copy')\n        textField.remove();\n        setTimeout(() => {\n            setShowPopOver(false);\n        }, 2000);\n    }\n\n    const id = 'cpbtn' + md5(props.text)\n    return <><span style={{cursor: 'pointer', color: '#555'}} ref={target} id={id} onClick={() => copyToClipboard(props.text)}\n                 title={`Press to copy: ${props.text}`}>\n            <FontAwesomeIcon size=\"sm\" icon={faCopy}/> Копировать\n\n        </span>\n        <Overlay target={target.current}\n                 show={showPopOver}\n                 placement={\"right\"}>\n            {({ placement, arrowProps, show: _show, popper, ...props }) => (\n                <div\n                    {...props}\n                    style={{\n                        backgroundColor: 'white',\n                        opacity:.5,\n                        padding: '2px 10px',\n                        //color: 'white',\n                        borderRadius: 3,\n                        ...props.style,\n                    }}\n                >\n                    Скопировано\n                </div>\n            )}\n        </Overlay>\n        </>\n}\n"]},"metadata":{},"sourceType":"module"}