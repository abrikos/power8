{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abrikos/WebstormProjects/math/src/Routes.js\";\nimport React from \"react\";\nimport Home from \"pages/home/home\";\nimport PostList from \"pages/post/PostList\";\nimport Logout from \"components/login/Logout\";\nimport ErrorPage from \"components/service/ErrorPage\";\nimport AdminIndex from \"pages/admin/AdminIndex\";\nimport Login from \"components/login/login\";\nimport Cabinet from \"pages/cabinet/cabinet\";\nimport PostView from \"pages/post/PostView\";\nexport default function Routes(store) {\n  const routes = {\n    \"/\": () => /*#__PURE__*/_jsxDEV(Home, {\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 20\n    }, this),\n    \"/news\": () => /*#__PURE__*/_jsxDEV(PostList, {\n      title: \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\",\n      modelName: \"post\",\n      filter: {\n        order: {\n          createdAt: -1\n        }\n      },\n      store: store\n    }, 'news', false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 24\n    }, this),\n    \"/post/:id/:head\": params => /*#__PURE__*/_jsxDEV(PostView, {\n      store: store,\n      ...params\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 40\n    }, this),\n    \"/login\": () => /*#__PURE__*/_jsxDEV(Login, {\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }, this) //\"/persons/:type\": (params) => <PersonListLarge {...params} store={store}/>,\n\n  };\n  const routesLogged = {\n    \"/cabinet\": () => /*#__PURE__*/_jsxDEV(Cabinet, {\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }, this),\n    \"/logout\": () => /*#__PURE__*/_jsxDEV(Logout, {\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this)\n  };\n  const routesEditor = {};\n  const routesAdmin = {\n    \"/admin/:control\": params => /*#__PURE__*/_jsxDEV(AdminIndex, { ...params,\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 40\n    }, this),\n    \"/admin/:control/:id/update\": params => /*#__PURE__*/_jsxDEV(AdminIndex, { ...params,\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 51\n    }, this),\n    \"/admin\": () => /*#__PURE__*/_jsxDEV(AdminIndex, {\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this)\n  };\n\n  for (const path of Object.keys(routesLogged)) {\n    routes[path] = store.authenticatedUser ? routesLogged[path] : () => /*#__PURE__*/_jsxDEV(ErrorPage, {\n      error: 401,\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 77\n    }, this);\n  }\n\n  for (const path of Object.keys(routesEditor)) {\n    routes[path] = store.authenticatedUser ? store.authenticatedUser.editor || store.authenticatedUser.admin ? routesEditor[path] : () => /*#__PURE__*/_jsxDEV(ErrorPage, {\n      error: 403,\n      store: store,\n      message: 'Доступ разрешен только редакторам'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 106\n    }, this) : () => /*#__PURE__*/_jsxDEV(ErrorPage, {\n      error: 401,\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this);\n  }\n\n  for (const path of Object.keys(routesAdmin)) {\n    routes[path] = store.authenticatedUser ? store.authenticatedUser.admin ? routesAdmin[path] : () => /*#__PURE__*/_jsxDEV(ErrorPage, {\n      error: 403,\n      store: store,\n      message: 'Доступ разрешен только администраторам'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 71\n    }, this) : () => /*#__PURE__*/_jsxDEV(ErrorPage, {\n      error: 401,\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this);\n  }\n\n  return routes;\n}\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/home/abrikos/WebstormProjects/math/src/Routes.js"],"names":["React","Home","PostList","Logout","ErrorPage","AdminIndex","Login","Cabinet","PostView","Routes","store","routes","order","createdAt","params","routesLogged","routesEditor","routesAdmin","path","Object","keys","authenticatedUser","editor","admin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Home from \"pages/home/home\";\nimport PostList from \"pages/post/PostList\";\nimport Logout from \"components/login/Logout\";\nimport ErrorPage from \"components/service/ErrorPage\";\nimport AdminIndex from \"pages/admin/AdminIndex\";\nimport Login from \"components/login/login\";\nimport Cabinet from \"pages/cabinet/cabinet\";\nimport PostView from \"pages/post/PostView\";\n\nexport default function Routes(store) {\n    const routes = {\n        \"/\": () => <Home store={store}/>,\n        \"/news\": () => <PostList key={'news'} title=\"Новости\" modelName=\"post\" filter={{order: {createdAt: -1}}} store={store}/>,\n        \"/post/:id/:head\": (params) => <PostView store={store} {...params}/>,\n        \"/login\": () => <Login store={store}/>,\n\n        //\"/persons/:type\": (params) => <PersonListLarge {...params} store={store}/>,\n\n    };\n\n    const routesLogged = {\n        \"/cabinet\": () => <Cabinet store={store}/>,\n        \"/logout\": () => <Logout store={store}/>,\n    }\n\n    const routesEditor = {}\n\n    const routesAdmin = {\n        \"/admin/:control\": (params) => <AdminIndex {...params} store={store}/>,\n        \"/admin/:control/:id/update\": (params) => <AdminIndex {...params} store={store}/>,\n        \"/admin\": () => <AdminIndex store={store}/>,\n    }\n\n\n    for (const path of Object.keys(routesLogged)) {\n        routes[path] = store.authenticatedUser ? routesLogged[path] : () => <ErrorPage error={401} store={store}/>;\n    }\n    for (const path of Object.keys(routesEditor)) {\n        routes[path] = store.authenticatedUser ?\n            store.authenticatedUser.editor || store.authenticatedUser.admin ? routesEditor[path] : () => <ErrorPage error={403} store={store} message={'Доступ разрешен только редакторам'}/>\n            :\n            () => <ErrorPage error={401} store={store}/>\n        ;\n    }\n    for (const path of Object.keys(routesAdmin)) {\n        routes[path] = store.authenticatedUser ?\n            store.authenticatedUser.admin ? routesAdmin[path] : () => <ErrorPage error={403} store={store} message={'Доступ разрешен только администраторам'}/>\n            :\n            () => <ErrorPage error={401} store={store}/>\n        ;\n    }\n    return routes;\n}\n"]},"metadata":{},"sourceType":"module"}