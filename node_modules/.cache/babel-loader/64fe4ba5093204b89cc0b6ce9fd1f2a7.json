{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abrikos/WebstormProjects/math/src/components/inputModel/InputHasMany.js\";\nimport React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { A } from \"hookrouter\";\nexport default function (props) {\n  const [value, setValue] = useState(props.value); //const [selected, setSelected] = useState([])\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  const list = props.list;\n  /*useEffect(() => {\n      setValue()\n  }, [])*/\n\n  function selectValues(e) {\n    const vals = [];\n\n    for (const o of e.target.options) {\n      if (o.selected) vals.push(list.find(m => m.id === o.value));\n    } //setSelected(vals)\n\n\n    const currValue = [...value];\n    setValue(currValue.concat(vals));\n    toggle();\n  }\n\n  function remove(id) {\n    setValue(value.filter(v => v.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-has-many\",\n    children: [!props.field.options.readOnly && /*#__PURE__*/_jsxDEV(\"select\", {\n      size: 20,\n      multiple: true,\n      name: props.field.name,\n      value: value.map(v => v.id),\n      hidden: true,\n      readOnly: true,\n      children: value.map((item, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.id,\n        children: [\" \", item[props.field.options.property], \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-attached\",\n      children: value.map((item, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"has-many-item\",\n        children: [/*#__PURE__*/_jsxDEV(A, {\n          href: `/admin/${props.field.options.ref.toLowerCase()}/${item.id}/update`,\n          children: item[props.field.options.property]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), !props.field.options.readOnly && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hasMany-remove\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => remove(item.id),\n            checked: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 51\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), !props.field.options.readOnly && /*#__PURE__*/_jsxDEV(Dropdown, {\n      isOpen: dropdownOpen,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        caret: true,\n        size: \"sm\",\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          size: 20,\n          multiple: true,\n          onChange: selectValues,\n          name: \"hasManyItems\",\n          children: list.filter(l => !value.map(v => v.id).includes(l.id)).map(l => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: l.id,\n            children: l[props.field.options.property]\n          }, l.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 110\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"sources":["/home/abrikos/WebstormProjects/math/src/components/inputModel/InputHasMany.js"],"names":["React","useState","Dropdown","A","props","value","setValue","dropdownOpen","setDropdownOpen","toggle","prevState","list","selectValues","e","vals","o","target","options","selected","push","find","m","id","currValue","concat","remove","filter","v","field","readOnly","name","map","item","i","property","ref","toLowerCase","l","includes"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Dropdown} from \"react-bootstrap\";\nimport {A} from \"hookrouter\"\n\nexport default function (props) {\n    const [value, setValue] = useState(props.value)\n    //const [selected, setSelected] = useState([])\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n    const list = props.list;\n\n    /*useEffect(() => {\n        setValue()\n    }, [])*/\n\n    function selectValues(e) {\n        const vals = [];\n        for (const o of e.target.options) {\n            if (o.selected) vals.push(list.find(m => m.id === o.value))\n        }\n        //setSelected(vals)\n        const currValue = [...value];\n        setValue(currValue.concat(vals))\n        toggle()\n    }\n\n    function remove(id) {\n        setValue(value.filter(v => v.id !== id))\n    }\n\n    return <div className=\"input-has-many\">\n        {!props.field.options.readOnly &&\n        <select size={20} multiple={true} name={props.field.name} value={value.map(v => v.id)} hidden readOnly>\n            {value.map((item, i) => <option key={i} value={item.id}> {item[props.field.options.property]} </option>)}\n        </select>}\n\n        <div className=\"items-attached\">\n            {value.map((item, i) => <span key={i} className=\"has-many-item\">\n                <A href={`/admin/${props.field.options.ref.toLowerCase()}/${item.id}/update`}>{item[props.field.options.property]}</A>\n                {!props.field.options.readOnly && <span className=\"hasMany-remove\">\n                    <input type=\"checkbox\" onChange={() => remove(item.id)} checked/>\n                </span>}\n            </span>)}\n        </div>\n        {!props.field.options.readOnly && <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n            <Dropdown.Toggle caret size=\"sm\">\n                Выбрать\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n\n                <select size={20} multiple={true} onChange={selectValues}\n                        name=\"hasManyItems\">{list.filter(l => !value.map(v => v.id).includes(l.id)).map(l => <option\n                    key={l.id} value={l.id}>{l[props.field.options.property]}</option>)}</select>\n                {/*<Button size=\"sm\" onClick={addHasMany}>Добавить</Button>*/}\n\n            </Dropdown.Menu>\n        </Dropdown>}\n\n    </div>\n}\n"]},"metadata":{},"sourceType":"module"}