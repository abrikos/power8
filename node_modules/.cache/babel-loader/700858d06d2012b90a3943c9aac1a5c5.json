{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abrikos/WebstormProjects/math/src/Application.js\",\n    _s = $RefreshSig$();\n\nimport { useRoutes } from \"hookrouter\";\nimport routes from \"Routes\";\nimport ThemeMain from \"themes/main/ThemeMain\";\nimport ThemeAdmin from \"themes/admin/ThemeAdmin\";\nimport React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\nimport f2o from \"form-to-object\";\nexport default function Application() {\n  _s();\n\n  const [authenticatedUser, setAuthUser] = useState(false);\n  useEffect(() => {\n    //let isSubscribed = true\n    //startWebSocket();\n    //setInterval(checkWebsocket, 1000);\n    store.getUser().then(setAuthUser); //return () => isSubscribed = false;\n    //const t = params.getCookie('theme');\n  }, []);\n  const store = {\n    authenticatedUser,\n\n    async postData(path = '', data = {}) {\n      const label = new Date().valueOf() + ' - POST ' + path;\n      console.time(label);\n      const url = '/api' + path;\n      return new Promise((resolve, reject) => {\n        axios.post(url, data).then(res => {\n          resolve(res.data);\n          console.timeEnd(label);\n        }).catch(err => {\n          reject({\n            error: err.response.status,\n            message: err.response.data.message || err.response.statusText\n          });\n        });\n      });\n    },\n\n    async api(path, data) {\n      return await this.postData(path, data);\n    },\n\n    logOut() {\n      setAuthUser(null);\n      this.api('/logout').then(() => window.history.back());\n    },\n\n    formToObject(form) {\n      return f2o(form);\n    },\n\n    logIn() {\n      this.getUser().then(setAuthUser);\n    },\n\n    async getUser() {\n      const user = await this.postData('/user/authenticated');\n\n      if (!user.error) {\n        return user;\n      } else {\n        console.warn(user.error);\n      }\n    }\n\n  };\n  let routeResult = useRoutes(routes(store));\n  const admin = window.location.pathname.match(/^\\/editor/);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!admin && /*#__PURE__*/_jsxDEV(ThemeMain, {\n      routeResult: routeResult,\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 24\n    }, this), admin && /*#__PURE__*/_jsxDEV(ThemeAdmin, {\n      routeResult: routeResult,\n      store: store\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Application, \"WI7yZ896ic/iXYWr85NO78MqkwE=\", false, function () {\n  return [useRoutes];\n});\n\n_c = Application;\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"sources":["/home/abrikos/WebstormProjects/math/src/Application.js"],"names":["useRoutes","routes","ThemeMain","ThemeAdmin","React","useEffect","useState","axios","f2o","Application","authenticatedUser","setAuthUser","store","getUser","then","postData","path","data","label","Date","valueOf","console","time","url","Promise","resolve","reject","post","res","timeEnd","catch","err","error","response","status","message","statusText","api","logOut","window","history","back","formToObject","form","logIn","user","warn","routeResult","admin","location","pathname","match"],"mappings":";;;;;AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAM,CAACC,iBAAD,EAAoBC,WAApB,IAAmCL,QAAQ,CAAC,KAAD,CAAjD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACAO,IAAAA,KAAK,CAACC,OAAN,GACKC,IADL,CACUH,WADV,EAJY,CAOZ;AACA;AACH,GATQ,EASN,EATM,CAAT;AAWA,QAAMC,KAAK,GAAG;AACVF,IAAAA,iBADU;;AAEV,UAAMK,QAAN,CAAeC,IAAI,GAAG,EAAtB,EAA0BC,IAAI,GAAG,EAAjC,EAAqC;AACjC,YAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,UAAvB,GAAoCJ,IAAlD;AACAK,MAAAA,OAAO,CAACC,IAAR,CAAaJ,KAAb;AACA,YAAMK,GAAG,GAAG,SAASP,IAArB;AACA,aAAO,IAAIQ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCnB,QAAAA,KAAK,CAACoB,IAAN,CAAWJ,GAAX,EAAgBN,IAAhB,EACKH,IADL,CACUc,GAAG,IAAI;AACTH,UAAAA,OAAO,CAACG,GAAG,CAACX,IAAL,CAAP;AACAI,UAAAA,OAAO,CAACQ,OAAR,CAAgBX,KAAhB;AACH,SAJL,EAKKY,KALL,CAKWC,GAAG,IAAI;AACVL,UAAAA,MAAM,CAAC;AAACM,YAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaC,MAArB;AAA6BC,YAAAA,OAAO,EAAEJ,GAAG,CAACE,QAAJ,CAAahB,IAAb,CAAkBkB,OAAlB,IAA6BJ,GAAG,CAACE,QAAJ,CAAaG;AAAhF,WAAD,CAAN;AACH,SAPL;AASH,OAVM,CAAP;AAWH,KAjBS;;AAmBV,UAAMC,GAAN,CAAUrB,IAAV,EAAgBC,IAAhB,EAAsB;AAClB,aAAO,MAAM,KAAKF,QAAL,CAAcC,IAAd,EAAoBC,IAApB,CAAb;AACH,KArBS;;AAuBVqB,IAAAA,MAAM,GAAG;AACL3B,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA,WAAK0B,GAAL,CAAS,SAAT,EAAoBvB,IAApB,CAAyB,MAAIyB,MAAM,CAACC,OAAP,CAAeC,IAAf,EAA7B;AACH,KA1BS;;AA4BVC,IAAAA,YAAY,CAACC,IAAD,EAAM;AACd,aAAOnC,GAAG,CAACmC,IAAD,CAAV;AACH,KA9BS;;AAgCVC,IAAAA,KAAK,GAAG;AACJ,WAAK/B,OAAL,GACKC,IADL,CACUH,WADV;AAEH,KAnCS;;AAqCV,UAAME,OAAN,GAAgB;AACZ,YAAMgC,IAAI,GAAG,MAAM,KAAK9B,QAAL,CAAc,qBAAd,CAAnB;;AACA,UAAI,CAAC8B,IAAI,CAACb,KAAV,EAAiB;AACb,eAAOa,IAAP;AACH,OAFD,MAEO;AACHxB,QAAAA,OAAO,CAACyB,IAAR,CAAaD,IAAI,CAACb,KAAlB;AACH;AACJ;;AA5CS,GAAd;AA+CA,MAAIe,WAAW,GAAG/C,SAAS,CAACC,MAAM,CAACW,KAAD,CAAP,CAA3B;AACA,QAAMoC,KAAK,GAAGT,MAAM,CAACU,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,WAA/B,CAAd;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACK,CAACH,KAAD,iBAAU,QAAC,SAAD;AAAW,MAAA,WAAW,EAAED,WAAxB;AAAqC,MAAA,KAAK,EAAEnC;AAA5C;AAAA;AAAA;AAAA;AAAA,YADf,EAEKoC,KAAK,iBAAI,QAAC,UAAD;AAAY,MAAA,WAAW,EAAED,WAAzB;AAAsC,MAAA,KAAK,EAAEnC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GArEuBH,W;UA6DFT,S;;;KA7DES,W","sourcesContent":["import {useRoutes} from \"hookrouter\";\nimport routes from \"Routes\";\nimport ThemeMain from \"themes/main/ThemeMain\";\nimport ThemeAdmin from \"themes/admin/ThemeAdmin\";\nimport React, {useEffect, useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\nimport f2o from \"form-to-object\"\n\nexport default function Application() {\n    const [authenticatedUser, setAuthUser] = useState(false);\n\n    useEffect(() => {\n        //let isSubscribed = true\n        //startWebSocket();\n        //setInterval(checkWebsocket, 1000);\n        store.getUser()\n            .then(setAuthUser)\n\n        //return () => isSubscribed = false;\n        //const t = params.getCookie('theme');\n    }, []);\n\n    const store = {\n        authenticatedUser,\n        async postData(path = '', data = {}) {\n            const label = new Date().valueOf() + ' - POST ' + path;\n            console.time(label)\n            const url = '/api' + path;\n            return new Promise((resolve, reject) => {\n                axios.post(url, data)\n                    .then(res => {\n                        resolve(res.data)\n                        console.timeEnd(label)\n                    })\n                    .catch(err => {\n                        reject({error: err.response.status, message: err.response.data.message || err.response.statusText})\n                    })\n\n            })\n        },\n\n        async api(path, data) {\n            return await this.postData(path, data)\n        },\n\n        logOut() {\n            setAuthUser(null)\n            this.api('/logout').then(()=>window.history.back())\n        },\n\n        formToObject(form){\n            return f2o(form)\n        },\n\n        logIn() {\n            this.getUser()\n                .then(setAuthUser)\n        },\n\n        async getUser() {\n            const user = await this.postData('/user/authenticated');\n            if (!user.error) {\n                return user;\n            } else {\n                console.warn(user.error)\n            }\n        },\n    }\n\n    let routeResult = useRoutes(routes(store));\n    const admin = window.location.pathname.match(/^\\/editor/);\n    return (\n        <div className=\"App\">\n            {!admin && <ThemeMain routeResult={routeResult} store={store}/>}\n            {admin && <ThemeAdmin routeResult={routeResult} store={store}/>}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}