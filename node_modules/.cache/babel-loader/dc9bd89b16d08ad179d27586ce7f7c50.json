{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abrikos/WebstormProjects/math/src/components/file-list/FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport FileList from \"components/file-list/FileList\";\nimport Loader from \"components/loader/Loader\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nFileUpload.propTypes = {\n  uploadDone: PropTypes.func.isRequired\n};\nexport default function FileUpload(props) {\n  _s();\n\n  //const [filesUploaded, setImagesUploaded] = useState([]);\n  const [filesDeclined, setImagesDeclined] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const tokens = props.tokens;\n  const nameRef = useRef();\n\n  async function _handleImageChange(e) {\n    setLoader(true);\n    e.preventDefault();\n    const uploaded = [];\n    const declined = [];\n\n    for (const file of e.target.files) {\n      /*let reader = new FileReader();\n      reader.onloadend = () => {\n           console.log(1,items)\n          items.push(reader.result);\n          //setImagesUploaded(ims);\n      };*/\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('tokens', tokens);\n\n      try {\n        const image = await props.store.api('/file/upload/', formData);\n\n        if (image.error) {\n          declined.push({\n            error: image.message,\n            file\n          });\n        } else {\n          uploaded.push(image);\n        }\n\n        console.log('UPLOADED', uploaded);\n      } catch (e) {\n        declined.push({\n          error: e.message,\n          file\n        }); //reader.readAsDataURL(file);\n      }\n    }\n\n    if (uploaded.length && props.uploadDone) props.uploadDone(uploaded.map(i => i.id)); //setImagesUploaded(uploaded);\n\n    setImagesDeclined(declined);\n    setLoader(false);\n  }\n\n  function openDialog() {\n    nameRef.current.click();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: nameRef,\n      multiple: props.multiple,\n      onChange: _handleImageChange,\n      className: \"d-none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: openDialog,\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), !!filesDeclined.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u041E\\u0442\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FileList, {\n        files: filesDeclined,\n        store: props.store\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n}\n\n_s(FileUpload, \"lGW8Hal2fKQmRd/zsq6fahcOX0o=\");\n\n_c = FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["/home/abrikos/WebstormProjects/math/src/components/file-list/FileUpload.js"],"names":["React","useRef","useState","FileList","Loader","PropTypes","Button","FileUpload","propTypes","uploadDone","func","isRequired","props","filesDeclined","setImagesDeclined","loader","setLoader","tokens","nameRef","_handleImageChange","e","preventDefault","uploaded","declined","file","target","files","formData","FormData","append","image","store","api","error","push","message","console","log","length","map","i","id","openDialog","current","click","multiple"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport FileList from \"components/file-list/FileList\";\nimport Loader from \"components/loader/Loader\";\nimport PropTypes from \"prop-types\";\nimport {Button} from \"react-bootstrap\";\n\nFileUpload.propTypes = {\n    uploadDone: PropTypes.func.isRequired\n};\n\nexport default function FileUpload(props) {\n    //const [filesUploaded, setImagesUploaded] = useState([]);\n    const [filesDeclined, setImagesDeclined] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const tokens = props.tokens;\n    const nameRef = useRef()\n\n    async function _handleImageChange(e) {\n        setLoader(true)\n        e.preventDefault();\n        const uploaded = [];\n        const declined = [];\n        for (const file of e.target.files) {\n            /*let reader = new FileReader();\n            reader.onloadend = () => {\n\n                console.log(1,items)\n                items.push(reader.result);\n                //setImagesUploaded(ims);\n            };*/\n            const formData = new FormData();\n            formData.append('file', file);\n            formData.append('tokens', tokens);\n            try {\n                const image = await props.store.api('/file/upload/', formData);\n                if(image.error){\n                    declined.push({error: image.message, file})\n                }else{\n                    uploaded.push(image);\n                }\n                console.log('UPLOADED',uploaded)\n            } catch (e) {\n                declined.push({error: e.message, file})\n                //reader.readAsDataURL(file);\n            }\n\n        }\n        if (uploaded.length && props.uploadDone) props.uploadDone(uploaded.map(i => i.id))\n        //setImagesUploaded(uploaded);\n        setImagesDeclined(declined);\n        setLoader(false)\n    }\n\n    function openDialog() {\n        nameRef.current.click()\n    }\n\n    return <div>\n        {loader ? <Loader/> : <input type=\"file\" ref={nameRef} multiple={props.multiple} onChange={_handleImageChange}\n                                     className=\"d-none\"/>}\n        <Button onClick={openDialog}>Загрузить фотографии</Button>\n        {/*{!!filesUploaded.length && <div>\n            <h4>Загружено</h4>\n            <ImageList files={filesUploaded} editable={props.editable} store={props.store}/>\n        </div>}*/}\n\n        {!!filesDeclined.length && <div>\n            <h4>Отказано</h4>\n            <FileList files={filesDeclined} store={props.store}/>\n        </div>}\n\n    </div>\n\n}\n\n"]},"metadata":{},"sourceType":"module"}